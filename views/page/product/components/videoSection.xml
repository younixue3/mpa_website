<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="video_product_section" name="Video Product Section">
        <section class="hidden md:flex w-full h-screen video-section-trigger overflow-hidden">
            <canvas class="h-screen w-full video-section" id="hero-lightpass" />
            <div class="absolute w-full h-full flex relative">
                <div id="510mm" class="absolute bottom-[7.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu 5-10 mm</h3>
                    <p class="text-lg w-[44rem]">Batu ukuran 5–10 mm, atau sering disebut batu screening, merupakan hasil pemrosesan mesin pemecah batu dengan ukuran seragam dan presisi tinggi. Material ini biasa digunakan sebagai campuran utama dalam pembuatan aspal hotmix serta penebalan struktur jalan pada proses Asphalt Mixing Plant (AMP).</p>
                </div>
                <div id="1020mm" class="absolute bottom-[9.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu 10-20 mm</h3>
                    <p class="text-lg w-[44rem]">Batu ukuran 10–20 mm merupakan material favorit dalam dunia konstruksi. Ukurannya yang seragam dengan daya tahan tinggi menjadikannya pilihan utama untuk pengecoran struktur ringan hingga berat.</p>
                </div>
                <div id="2030mm" class="absolute bottom-[7.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu 20-30 mm</h3>
                    <p class="text-lg w-[44rem]">Batu ukuran 20–30 mm merupakan material andalan untuk berbagai kebutuhan konstruksi, khususnya pada pengecoran beton horizontal seperti lantai kerja dan struktur dasar. Ukurannya yang ideal memberikan kepadatan dan daya ikat optimal dalam campuran beton.</p>
                </div>
                <div id="3050mm" class="absolute bottom-[9.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu 30-50 mm</h3>
                    <p class="text-lg w-[44rem]">Batu ukuran 30-50 mm memiliki ukuran ideal untuk kebutuhan konstruksi dengan beban tinggi. Umumnya digunakan sebagai lapisan dasar badan jalan, penyangga bantalan rel kereta, hingga pemberat pipa di dasar laut atau proyek bawah permukaan lainnya.</p>
                </div>
                <div id="5070mm" class="absolute bottom-[9.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu 50-70 mm</h3>
                    <p class="text-lg w-[44rem]">Batu ukuran 50–70 mm digunakan pada bagian struktur paling bawah dalam proyek infrastruktur besar. Material ini memberikan kestabilan tinggi dan ruang antar butiran yang ideal untuk drainase.</p>
                </div>
                <div id="pondasi" class="absolute bottom-[7.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu Pondasi (20-30 cm)</h3>
                    <p class="text-lg w-[44rem]">Batu pondasi berukuran 20–30 cm banyak digunakan untuk konstruksi bangunan seperti rumah, ruko, pabrik, hingga bangunan bertingkat. Ukurannya yang besar membuat batu ini memiliki kemampuan menahan beban struktur di atasnya secara optimal.</p>
                </div>
                <div id="bolder" class="absolute bottom-[9.5rem] right-[8rem] text-left text-white transform opacity-0 transition-all ease-in-out duration-500">
                    <h3 class="text-3xl font-bold text-nowrap">Batu Bolder (30 cm up)</h3>
                    <p class="text-lg w-[44rem]">Batu bolder berukuran lebih dari 30 cm merupakan material utama dalam proyek-proyek reklamasi, tanggul sungai, dan perlindungan pantai. Bobot dan ukurannya sangat efektif untuk menahan arus air, ombak, maupun longsoran tanah.</p>
                </div>
            </div>
            <!-- <video 
                class="h-full w-full object-cover"
                preload="auto" 
                autoplay="autoplay"
                muted="muted"
                playsinline="playsinline">
                <source src="/mpa_website/static/src/video/produk_home_new.mp4" type="video/mp4"/>
                <p class="text-gray-700 dark:text-gray-400">Your browser does not support the video tag.</p>
            </video> -->
        </section>

        <script type="text/javascript">
            document.addEventListener("DOMContentLoaded", () => {
                // Register GSAP ScrollTrigger plugin
                gsap.registerPlugin(ScrollTrigger);

                // Canvas setup
                const canvas = document.getElementById("hero-lightpass");
                const context = canvas.getContext("2d");

                // Set canvas dimensions
                const setCanvasDimensions = () => {
                    canvas.width = window.innerWidth;
                    canvas.height = window.innerHeight;
                };
                setCanvasDimensions();
                window.addEventListener('resize', setCanvasDimensions);

                // Frame sequence configuration
                const frameCount = 2238;
                const currentFrame = index => (
                    `/mpa_website/static/src/video/produk-video-sequence/frame_${(index + 1).toString().padStart(5, '0')}.jpg`
                );

                // Preload images
                const images = [];
                const imagePromises = [];
                
                for (let i = 0; i &lt; frameCount; i++) {
                    const img = new Image();
                    const promise = new Promise((resolve) => {
                        img.onload = resolve;
                    });
                    img.src = currentFrame(i);
                    images.push(img);
                    imagePromises.push(promise);
                }

                // Animation state
                const animationState = {
                    frame: 0
                };

                // GSAP animations
                gsap.to(animationState, {
                    frame: frameCount - 1,
                    snap: "frame",
                    ease: "none",
                    scrollTrigger: {
                        trigger: ".video-section-trigger",
                        scrub: 0.5,
                        pin: true,
                        pinSpacing: true,
                        start: "top top",
                        end: "+=2000%",
                        anticipatePin: 1
                    },
                    onUpdate: render
                });

                // Render function with proper scaling
                function render() {
                    if (!images[animationState.frame]) return;
                    
                    context.clearRect(0, 0, canvas.width, canvas.height);
                    
                    const img = images[animationState.frame];
                    const scale = Math.max(
                        canvas.width / img.width,
                        canvas.height / img.height
                    );
                    
                    const x = (canvas.width - img.width * scale) / 2;
                    const y = (canvas.height - img.height * scale) / 2;
                    
                    context.drawImage(
                        img,
                        x, y,
                        img.width * scale,
                        img.height * scale
                    );
                    
                    // Mengubah opacity elemen 510mm saat frame mencapai 660
                    const element510mm = document.getElementById('510mm');
                    const element1020mm = document.getElementById('1020mm');
                    const element2030mm = document.getElementById('2030mm');
                    const element3050mm = document.getElementById('3050mm');
                    const element5070mm = document.getElementById('5070mm');
                    const elementPondasi = document.getElementById('pondasi');
                    const elementBolder = document.getElementById('bolder');
                    const elements = [
                        { el: element510mm, frames: [240, 302] },
                        { el: element1020mm, frames: [540, 602] },
                        { el: element2030mm, frames: [840, 902] },
                        { el: element3050mm, frames: [1140, 1202] },
                        { el: element5070mm, frames: [1440, 1502] },
                        { el: elementPondasi, frames: [1740, 1802] },
                        { el: elementBolder, frames: [2040, 2102] }
                    ];

                    elements.forEach(({el, frames}) => {
                        if (el) {
                            const [showFrame, hideFrame] = frames;
                            if (animationState.frame >= showFrame &amp;&amp; animationState.frame &lt; hideFrame) {
                                el.classList.remove('opacity-0');
                                el.classList.add('opacity-100');
                            } else {
                                el.classList.remove('opacity-100');
                                el.classList.add('opacity-0');
                            }
                        }
                    });
                }

                // Initialize render once first image is loaded
                Promise.all(imagePromises).then(() => {
                    render();
                });
            });
        </script>
    </template>
</odoo>